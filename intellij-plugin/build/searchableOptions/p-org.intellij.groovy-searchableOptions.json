{"id":"preferences.keymap","name":"Keymap","entries":[{"hit":"Action generates equals and hashCode now","path":"ActionManager"},{"hit":"Action generates propertyMissing()","path":"ActionManager"},{"hit":"Build Resources","path":"ActionManager"},{"hit":"Constructor","path":"ActionManager"},{"hit":"Convert Groovy files to @CompileStatic","path":"ActionManager"},{"hit":"Convert Groovy files to Java","path":"ActionManager"},{"hit":"Convert to @CompileStatic","path":"ActionManager"},{"hit":"Convert to Java","path":"ActionManager"},{"hit":"Create new Gant script","path":"ActionManager"},{"hit":"Creates a new Groovy Class","path":"ActionManager"},{"hit":"Creates a new Groovy Script","path":"ActionManager"},{"hit":"Don't generate Java stubs for this Groovy file on compilation","path":"ActionManager"},{"hit":"Dump","path":"ActionManager"},{"hit":"Dump Groovy Control Flow","path":"ActionManager"},{"hit":"Editor Popup Menu Actions (2)","path":"ActionManager"},{"hit":"Exclude from Stub Generation","path":"ActionManager"},{"hit":"Gant Script","path":"ActionManager"},{"hit":"Generate toString() method","path":"ActionManager"},{"hit":"Generates constructor","path":"ActionManager"},{"hit":"Generates getter","path":"ActionManager"},{"hit":"Generates setter","path":"ActionManager"},{"hit":"Getter","path":"ActionManager"},{"hit":"Getter and Setter","path":"ActionManager"},{"hit":"Groovy Class","path":"ActionManager"},{"hit":"Groovy Console","path":"ActionManager"},{"hit":"Groovy Resources","path":"ActionManager"},{"hit":"Groovy Script","path":"ActionManager"},{"hit":"Launch Groovy console","path":"ActionManager"},{"hit":"Project View Popup Refactoring Group","path":"ActionManager"},{"hit":"Rebuild Resources","path":"ActionManager"},{"hit":"Refactor","path":"ActionManager"},{"hit":"Run the compiler for Groovy files in resource roots to check for compilation issues","path":"ActionManager"},{"hit":"Run the compiler for all Groovy files in resource roots to check for compilation issues","path":"ActionManager"},{"hit":"Run the incremental compiler for Groovy files in resource roots to check for compilation issues","path":"ActionManager"},{"hit":"Setter","path":"ActionManager"},{"hit":"equals() and hashCode()","path":"ActionManager"},{"hit":"methodMissing()","path":"ActionManager"},{"hit":"propertyMissing()","path":"ActionManager"},{"hit":"toString()","path":"ActionManager"}]}
{"id":"editor.breadcrumbs","name":"Breadcrumbs","entries":[{"hit":"Groovy"}]}
{"id":"editor.stickyLines","name":"Sticky Lines","entries":[{"hit":"Groovy"}]}
{"id":"reference.settingsdialog.IDE.editor.colors.Groovy","name":"Groovy","entries":[{"hit":"Groovy"},{"hit":"Annotations//Annotation attribute name"},{"hit":"Annotations//Annotation name"},{"hit":"Bad character"},{"hit":"Braces and Operators//Braces"},{"hit":"Braces and Operators//Brackets"},{"hit":"Braces and Operators//Closure expression braces and arrow"},{"hit":"Braces and Operators//Lambda expression braces and arrow"},{"hit":"Braces and Operators//Operator sign"},{"hit":"Braces and Operators//Parentheses"},{"hit":"Classes and Interfaces//Abstract class"},{"hit":"Classes and Interfaces//Anonymous class"},{"hit":"Classes and Interfaces//Class"},{"hit":"Classes and Interfaces//Enum"},{"hit":"Classes and Interfaces//Interface"},{"hit":"Classes and Interfaces//Trait"},{"hit":"Classes and Interfaces//Type parameter"},{"hit":"Comments//Block comment"},{"hit":"Comments//Groovydoc//Tag"},{"hit":"Comments//Groovydoc//Text"},{"hit":"Comments//Line comment"},{"hit":"Fields//Instance field"},{"hit":"Fields//Static field"},{"hit":"Keyword"},{"hit":"Label"},{"hit":"List/Map to object conversion"},{"hit":"Map key/Named argument"},{"hit":"Methods//Constructor call"},{"hit":"Methods//Constructor declaration"},{"hit":"Methods//Instance method call"},{"hit":"Methods//Method declaration"},{"hit":"Methods//Static method call"},{"hit":"Number"},{"hit":"References//Instance property reference"},{"hit":"References//Static property reference"},{"hit":"References//Unresolved reference"},{"hit":"Strings//GString"},{"hit":"Strings//Invalid string escape"},{"hit":"Strings//String"},{"hit":"Strings//Valid string escape"},{"hit":"Variables and Parameters//Local variable"},{"hit":"Variables and Parameters//Parameter"},{"hit":"Variables and Parameters//Reassigned local variable"},{"hit":"Variables and Parameters//Reassigned parameter"}]}
{"id":"debugger.stepping","name":"Stepping","entries":[{"hit":"Do not step into specific Groovy classes"},{"hit":"Groovy"}]}
{"id":"debugger.hotswap","name":"HotSwap","entries":[{"hit":"Enable hot-swap agent for Groovy code"},{"hit":"Groovy"}]}
{"id":"preferences.sourceCode.Groovy","name":"Groovy","entries":[{"hit":"Disable"},{"hit":"Groovy"},{"hit":"Loading..."},{"hit":"Scheme:"},{"hit":"Set from..."},{"hit":"After class header:","path":"Blank Lines"},{"hit":"After imports:","path":"Blank Lines"},{"hit":"After package statement:","path":"Blank Lines"},{"hit":"Around class:","path":"Blank Lines"},{"hit":"Around field in interface:","path":"Blank Lines"},{"hit":"Around field:","path":"Blank Lines"},{"hit":"Around method in interface:","path":"Blank Lines"},{"hit":"Around method:","path":"Blank Lines"},{"hit":"Before '}':","path":"Blank Lines"},{"hit":"Before imports:","path":"Blank Lines"},{"hit":"Before method body:","path":"Blank Lines"},{"hit":"Before package statement:","path":"Blank Lines"},{"hit":"Blank Lines","path":"Blank Lines"},{"hit":"In code:","path":"Blank Lines"},{"hit":"In declarations:","path":"Blank Lines"},{"hit":"Keep maximum blank lines","path":"Blank Lines"},{"hit":"Minimum blank lines","path":"Blank Lines"},{"hit":"Add a space at line comment start","path":"Code Generation"},{"hit":"Add spaces around block comments","path":"Code Generation"},{"hit":"Block comment at first column","path":"Code Generation"},{"hit":"Code Generation","path":"Code Generation"},{"hit":"Comment Code","path":"Code Generation"},{"hit":"Enforce on reformat","path":"Code Generation"},{"hit":"Line comment at first column","path":"Code Generation"},{"hit":"Order of Members","path":"Code Generation"},{"hit":"Enable GroovyDoc formatting","path":"GroovyDoc"},{"hit":"GroovyDoc","path":"GroovyDoc"},{"hit":"Class count to use import with '*':","path":"Imports"},{"hit":"General","path":"Imports"},{"hit":"Import Layout","path":"Imports"},{"hit":"Imports","path":"Imports"},{"hit":"Insert imports for inner classes","path":"Imports"},{"hit":"Layout static imports separately","path":"Imports"},{"hit":"Names count to use static import with '*':","path":"Imports"},{"hit":"Use fully qualified class names","path":"Imports"},{"hit":"Use fully qualified class names in javadoc","path":"Imports"},{"hit":"Use single class import","path":"Imports"},{"hit":"Spaces","path":"Spaces"},{"hit":"Absolute","path":"Tabs and Indents"},{"hit":"Continuation indent:","path":"Tabs and Indents"},{"hit":"Indent labels","path":"Tabs and Indents"},{"hit":"Indent statements after label","path":"Tabs and Indents"},{"hit":"Indent:","path":"Tabs and Indents"},{"hit":"Keep indents on empty lines","path":"Tabs and Indents"},{"hit":"Label indent style:","path":"Tabs and Indents"},{"hit":"Label indent:","path":"Tabs and Indents"},{"hit":"Smart tabs","path":"Tabs and Indents"},{"hit":"Tab size:","path":"Tabs and Indents"},{"hit":"Tabs and Indents","path":"Tabs and Indents"},{"hit":"Use tab character","path":"Tabs and Indents"},{"hit":"Wrapping and Braces","path":"Wrapping and Braces"},{"hit":"'catch' keyword","path":"Spaces"},{"hit":"'catch' left brace","path":"Spaces"},{"hit":"'catch' parentheses","path":"Spaces"},{"hit":"'do' left brace","path":"Spaces"},{"hit":"'else' keyword","path":"Spaces"},{"hit":"'else' left brace","path":"Spaces"},{"hit":"'finally' keyword","path":"Spaces"},{"hit":"'finally' left brace","path":"Spaces"},{"hit":"'for' left brace","path":"Spaces"},{"hit":"'for' parentheses","path":"Spaces"},{"hit":"'if' left brace","path":"Spaces"},{"hit":"'if' parentheses","path":"Spaces"},{"hit":"'switch' left brace","path":"Spaces"},{"hit":"'switch' parentheses","path":"Spaces"},{"hit":"'synchronized' left brace","path":"Spaces"},{"hit":"'synchronized' parentheses","path":"Spaces"},{"hit":"'try' left brace","path":"Spaces"},{"hit":"'try' parentheses","path":"Spaces"},{"hit":"'while' keyword","path":"Spaces"},{"hit":"'while' left brace","path":"Spaces"},{"hit":"'while' parentheses","path":"Spaces"},{"hit":"Additive operators (+, -)","path":"Spaces"},{"hit":"After ':'","path":"Spaces"},{"hit":"After '?'","path":"Spaces"},{"hit":"After 'assert' separator","path":"Spaces"},{"hit":"After 'for' semicolon","path":"Spaces"},{"hit":"After comma","path":"Spaces"},{"hit":"After type cast","path":"Spaces"},{"hit":"Annotation parameters","path":"Spaces"},{"hit":"Annotation parentheses","path":"Spaces"},{"hit":"Around operators","path":"Spaces"},{"hit":"Array initializer braces","path":"Spaces"},{"hit":"Array initializer left brace","path":"Spaces"},{"hit":"Assignment operators (=, +=, ...)","path":"Spaces"},{"hit":"Before ':'","path":"Spaces"},{"hit":"Before '?'","path":"Spaces"},{"hit":"Before 'assert' separator","path":"Spaces"},{"hit":"Before 'for' semicolon","path":"Spaces"},{"hit":"Before comma","path":"Spaces"},{"hit":"Before keywords","path":"Spaces"},{"hit":"Before left brace","path":"Spaces"},{"hit":"Before parentheses","path":"Spaces"},{"hit":"Before record parameter list","path":"Spaces"},{"hit":"Bitwise operators (&, |, ^)","path":"Spaces"},{"hit":"Brackets","path":"Spaces"},{"hit":"Class left brace","path":"Spaces"},{"hit":"Closure left brace in method calls","path":"Spaces"},{"hit":"Code braces","path":"Spaces"},{"hit":"Empty array initializer braces","path":"Spaces"},{"hit":"Empty method call parentheses","path":"Spaces"},{"hit":"Equality operators (==, !=)","path":"Spaces"},{"hit":"GString injection braces","path":"Spaces"},{"hit":"Grouping parentheses","path":"Spaces"},{"hit":"In named argument after ':'","path":"Spaces"},{"hit":"In named argument before ':'","path":"Spaces"},{"hit":"In ternary operator (?:)","path":"Spaces"},{"hit":"Lambda arrow","path":"Spaces"},{"hit":"List and maps literals","path":"Spaces"},{"hit":"Logical operators (&&, ||)","path":"Spaces"},{"hit":"Method call parentheses","path":"Spaces"},{"hit":"Method declaration parentheses","path":"Spaces"},{"hit":"Method left brace","path":"Spaces"},{"hit":"Multiplicative operators (*, /, %)","path":"Spaces"},{"hit":"Other","path":"Spaces"},{"hit":"Regexp expression (==~, =~)","path":"Spaces"},{"hit":"Relational operators (<, >, <=, >=, <=>)","path":"Spaces"},{"hit":"Shift operators (<<, >>, >>>)","path":"Spaces"},{"hit":"Tuple assignment expression","path":"Spaces"},{"hit":"Type cast parentheses","path":"Spaces"},{"hit":"Unary operators (!, -, +, ++, --, *)","path":"Spaces"},{"hit":"Within","path":"Spaces"},{"hit":"Within type arguments","path":"Spaces"},{"hit":"':' signs on next line","path":"Wrapping and Braces"},{"hit":"'?' and ':' signs on next line","path":"Wrapping and Braces"},{"hit":"'catch' on new line","path":"Wrapping and Braces"},{"hit":"'do ... while()' statement","path":"Wrapping and Braces"},{"hit":"'else' on new line","path":"Wrapping and Braces"},{"hit":"'finally' on new line","path":"Wrapping and Braces"},{"hit":"'for()' statement","path":"Wrapping and Braces"},{"hit":"'if()' statement","path":"Wrapping and Braces"},{"hit":"'switch' statement","path":"Wrapping and Braces"},{"hit":"'try' statement","path":"Wrapping and Braces"},{"hit":"'try-with-resources'","path":"Wrapping and Braces"},{"hit":"'while' on new line","path":"Wrapping and Braces"},{"hit":"'while()' statement","path":"Wrapping and Braces"},{"hit":"Align 'throws' to method start","path":"Wrapping and Braces"},{"hit":"Align assignments in columns","path":"Wrapping and Braces"},{"hit":"Align fields in columns","path":"Wrapping and Braces"},{"hit":"Align multiline named arguments","path":"Wrapping and Braces"},{"hit":"Align parenthesised when multiline","path":"Wrapping and Braces"},{"hit":"Align simple methods in columns","path":"Wrapping and Braces"},{"hit":"Align variables in columns","path":"Wrapping and Braces"},{"hit":"Align when multiline","path":"Wrapping and Braces"},{"hit":"Align when multiple","path":"Wrapping and Braces"},{"hit":"Array initializer","path":"Wrapping and Braces"},{"hit":"Assert statement","path":"Wrapping and Braces"},{"hit":"Assignment sign on next line","path":"Wrapping and Braces"},{"hit":"Assignment statement","path":"Wrapping and Braces"},{"hit":"Binary expressions","path":"Wrapping and Braces"},{"hit":"Braces placement","path":"Wrapping and Braces"},{"hit":"Builder methods","path":"Wrapping and Braces"},{"hit":"Chained method calls","path":"Wrapping and Braces"},{"hit":"Class annotations","path":"Wrapping and Braces"},{"hit":"Comment at first column","path":"Wrapping and Braces"},{"hit":"Comments","path":"Wrapping and Braces"},{"hit":"Control statement in one line","path":"Wrapping and Braces"},{"hit":"Each 'case' on a separate line","path":"Wrapping and Braces"},{"hit":"Ensure right margin is not exceeded","path":"Wrapping and Braces"},{"hit":"Enum constants","path":"Wrapping and Braces"},{"hit":"Extends/implements/permits keyword","path":"Wrapping and Braces"},{"hit":"Extends/implements/permits list","path":"Wrapping and Braces"},{"hit":"Field annotations","path":"Wrapping and Braces"},{"hit":"Force braces","path":"Wrapping and Braces"},{"hit":"GINQ clauses","path":"Wrapping and Braces"},{"hit":"Group declarations","path":"Wrapping and Braces"},{"hit":"Hard wrap at:","path":"Wrapping and Braces"},{"hit":"Import annotations","path":"Wrapping and Braces"},{"hit":"In class declaration","path":"Wrapping and Braces"},{"hit":"In lambda declaration","path":"Wrapping and Braces"},{"hit":"In method declaration","path":"Wrapping and Braces"},{"hit":"Indent 'break' from 'case'","path":"Wrapping and Braces"},{"hit":"Indent 'case' branches","path":"Wrapping and Braces"},{"hit":"Indent 'having' clause","path":"Wrapping and Braces"},{"hit":"Indent 'on' clause","path":"Wrapping and Braces"},{"hit":"Keep builder methods indents","path":"Wrapping and Braces"},{"hit":"Keep when reformatting","path":"Wrapping and Braces"},{"hit":"Line breaks","path":"Wrapping and Braces"},{"hit":"List and map literals","path":"Wrapping and Braces"},{"hit":"Local variable annotations","path":"Wrapping and Braces"},{"hit":"Method annotations","path":"Wrapping and Braces"},{"hit":"Method call arguments","path":"Wrapping and Braces"},{"hit":"Method declaration parameters","path":"Wrapping and Braces"},{"hit":"Method parentheses","path":"Wrapping and Braces"},{"hit":"Modifier list","path":"Wrapping and Braces"},{"hit":"Multiple expressions in one line","path":"Wrapping and Braces"},{"hit":"New line after '('","path":"Wrapping and Braces"},{"hit":"New line after '{'","path":"Wrapping and Braces"},{"hit":"Operation sign on next line","path":"Wrapping and Braces"},{"hit":"Other","path":"Wrapping and Braces"},{"hit":"Parameter annotations","path":"Wrapping and Braces"},{"hit":"Place ')' on new line","path":"Wrapping and Braces"},{"hit":"Place '}' on new line","path":"Wrapping and Braces"},{"hit":"Put space after keywords","path":"Wrapping and Braces"},{"hit":"Simple blocks in one line","path":"Wrapping and Braces"},{"hit":"Simple classes in one line","path":"Wrapping and Braces"},{"hit":"Simple lambdas in one line","path":"Wrapping and Braces"},{"hit":"Simple methods in one line","path":"Wrapping and Braces"},{"hit":"Special 'else if' treatment","path":"Wrapping and Braces"},{"hit":"Take priority over call chain wrapping","path":"Wrapping and Braces"},{"hit":"Ternary operation","path":"Wrapping and Braces"},{"hit":"Throws keyword","path":"Wrapping and Braces"},{"hit":"Throws list","path":"Wrapping and Braces"},{"hit":"Use flying geese braces","path":"Wrapping and Braces"},{"hit":"Visual guides","path":"Wrapping and Braces"},{"hit":"Wrap 'having' clause","path":"Wrapping and Braces"},{"hit":"Wrap 'on' clause","path":"Wrapping and Braces"},{"hit":"Wrap after dot","path":"Wrapping and Braces"},{"hit":"Wrap after modifier list","path":"Wrapping and Braces"},{"hit":"Wrap at right margin","path":"Wrapping and Braces"},{"hit":"Wrap first call","path":"Wrapping and Braces"},{"hit":"Wrap on typing","path":"Wrapping and Braces"}]}
{"id":"fileTemplates","name":"File and Code Templates","entries":[{"hit":"Groovy JUnit SetUp Method"},{"hit":"Groovy JUnit TearDown Method"},{"hit":"Groovy JUnit Test Case"},{"hit":"Groovy JUnit Test Method"},{"hit":"Groovy New Method Body"},{"hit":"Spock Test Method"},{"hit":"Spock cleanup Method"},{"hit":"Spock_SetUp_Method"},{"hit":"template"}]}
{"id":"copyright.filetypes.Groovy","name":"Groovy","entries":[{"hit":"A\u001bdd blank line after"},{"hit":"Add blank line \u001bbefore"},{"hit":"Afte\u001br other comments"},{"hit":"Bef\u001bore other comments"},{"hit":"Borders"},{"hit":"Box"},{"hit":"Comment Type"},{"hit":"Groovy"},{"hit":"Length:"},{"hit":"No copyright"},{"hit":"Prefix each line"},{"hit":"Relative Location"},{"hit":"Separator after"},{"hit":"Separator before"},{"hit":"Separator:"},{"hit":"Use block comment"},{"hit":"Use custom formatting options"},{"hit":"Use default settings"},{"hit":"Use line comment"}]}
{"id":"reference.projectsettings.compiler.javacompiler","name":"Java Compiler","entries":[{"hit":"Command line parameters:"},{"hit":"Generate debug info"},{"hit":"Groovy-Eclipse Options"},{"hit":"Path to groovy-eclipse-batch jar:"},{"hit":"VM options:"}]}
{"id":"Groovy compiler","name":"Groovy Compiler","entries":[{"hit":"Exclude from stub generation:"},{"hit":"Groovy Compiler"},{"hit":"Invoke \u001bdynamic support"},{"hit":"Path to \u001bconfigscript:"}]}
{"id":"reference.settingsdialog.project.gant","name":"Gant","entries":[{"hit":"Gant"},{"hit":"Gant home:"}]}
